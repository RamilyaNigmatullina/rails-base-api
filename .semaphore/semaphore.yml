version: v1.0
name: Rails Base API

agent:
  machine:
    type: e1-standard-4
    os_image: ubuntu1804

execution_time_limit:
  hours: 1

auto_cancel:
  queued:
    when: "true"

fail_fast:
  stop:
    when: "true"

blocks:
  - name: Build
    task:
      env_vars:
        - name: BUNDLE_WITHOUT
          value: development staging production
      secrets:
        - name: docker-secrets
      prologue:
        commands:
          # Authenticate with DockerHub
          - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin
      jobs:
      - name: Docker build
        commands:
          - checkout

          # Try to pull build image for this branch
          - docker pull "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}" || true

          # Build image
          - docker-compose build

          # Push image to DockerHub for the next tasks
          - docker tag rails_base_api:latest "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}-${SEMAPHORE_WORKFLOW_ID}"
          - docker push "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}-${SEMAPHORE_WORKFLOW_ID}"

          # Push images for the next builds
          - docker tag rails_base_api:latest "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}"
          - docker push "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}"

  - name: Run
    task:
      secrets:
        - name: docker-secrets

      prologue:
        commands:
          - checkout

          # Authenticate with DockerHub
          - echo "${DOCKER_PASSWORD}" | docker login -u "${DOCKER_USERNAME}" --password-stdin

          # Pull image build on previous task
          - docker pull "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}-${SEMAPHORE_WORKFLOW_ID}"
          - docker tag "flatstack/rails_base_api:${SEMAPHORE_GIT_BRANCH}-${SEMAPHORE_WORKFLOW_ID}" rails_base_api:latest

          # Fix Semaphore permissions bug
          - mkdir -p log tmp
          - chmod 777 log tmp

          # Run setup dotenv and run container
          - cp .env.example .env
          - docker-compose up --detach

          # Setup database
          - docker-compose exec app bin/rails db:create db:schema:load

      jobs:
      - name: Check Running Images
        commands:
          - docker ps

      - name: Run RSpec
        commands:
          - docker-compose exec app bin/rspec spec

      - name: Run Quality
        commands:
          - docker-compose exec app bin/quality
